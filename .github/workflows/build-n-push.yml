name: "Build & Push (to Cachix)"
on:
    workflow_dispatch:
    push:
    schedule:
        - cron: '0 15 * * *'
jobs:
    builds-parallel:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
              with:
                ref: "master"
            - uses: cachix/install-nix-action@v17
              with:
                nix_path: "nixpkgs=channel:nixpkgs-unstable"
                # Need manually sed /etc/nix/nix.conf to
                # add extra-sandbox-paths since invoking
                # nix happens before setup ccache dirs,
                # which makes nix angry.
            - name: "Install tools"
              run: |
                nix-env -f '<nixpkgs>' -iA \
                  'nix-build-uncached' 'fish' 'rsync'
            - uses: actions/cache@v3
              with:
                path: ~/ccache
                key: ccaches-seg01-${{ github.job }}-${{ github.sha }}
                restore-keys: |
                    ccaches-seg01--${{ github.job }}-
            - name: "Setup ccache for nix"
              run: |
                fish _scripts/ccache.fish setup
            - name: "Change TMPDIR for nix daemon"
              run: |
                fish _scripts/set-tmpdir.fish
            - name: "Update flake"
              run: |
                nix flake update
            - uses: cachix/cachix-action@master
              with:
                name: "nuirrce"
                authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
                cachixArgs: "-c7"
                pushFilter: |
                    (NVIDIA.*\.run)|(-source|vendor\..*|go-modules)|(ccache|stdenv)
            - name: "Build"
              run: |
                fish _scripts/do-build.fish \
                  parallel false workflow-builds.nix parallel
            - name: "Cleanup"
              if: always()
              run: |
                nix-collect-garbage -d
            - name: "Save ccache"
              if: always()
              run: |
                fish _scripts/ccache.fish finish
    # builds-sequential:
    #     - name: "Build"
    #       run: |
    #           fish _scripts/seq-build.fish \
    #             true workflow-builds.nix sequential
    builds-kernels:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
              with:
                ref: "master"
            - uses: cachix/install-nix-action@v17
              with:
                nix_path: "nixpkgs=channel:nixpkgs-unstable"
                # Need manually sed /etc/nix/nix.conf to
                # add extra-sandbox-paths since invoking
                # nix happens before setup ccache dirs,
                # which makes nix angry.
            - name: "Install tools"
              run: |
                nix-env -f '<nixpkgs>' -iA \
                  'nix-build-uncached' 'fish' 'rsync'
            - uses: actions/cache@v3
              with:
                path: ~/ccache
                key: ccaches-seg01-${{ github.job }}-${{ github.sha }}
                restore-keys: |
                    ccaches-seg01--${{ github.job }}-
            - name: "Setup ccache for nix"
              run: |
                fish _scripts/ccache.fish setup
            - name: "Change TMPDIR for nix daemon"
              run: |
                fish _scripts/set-tmpdir.fish
            - name: "Update flake"
              run: |
                nix flake update
            - uses: cachix/cachix-action@master
              with:
                name: "nuirrce"
                authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
                cachixArgs: "-c7"
                pushFilter: |
                    (NVIDIA.*\.run)|(-source|vendor\..*|go-modules)|(ccache|stdenv)
            - name: "Build"
              run: |
                fish _scripts/do-build.fish \
                  sequential false workflow-builds.nix kernels-modules
            - name: "Cleanup"
              if: always()
              run: |
                nix-collect-garbage -d
            - name: "Save ccache"
              if: always()
              run: |
                fish _scripts/ccache.fish finish