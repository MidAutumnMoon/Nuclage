name: "Build & Push (to Cachix)"
on:
    workflow_dispatch:
    push:
    schedule:
        - cron: '0 15 * * *'
jobs:
    builds-parallel:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
              with:
                ref: master
            - uses: cachix/install-nix-action@v17
              with:
                nix_path: "nixpkgs=channel:nixpkgs-unstable"
            - name: Install required tools
              run: |
                nix-env -f '<nixpkgs>' -iA \
                  'nix-build-uncached' 'fish'
            - name: Configure nix-daemon
              run: |
                fish _scripts/set-tmpdir.fish
            - name: Update flakes before buiding anything
              run: |
                nix flake update
            - uses: actions/cache@v3
              with:
                path: ~/ccache
                key: ccaches-seg01-${{ github.job }}-${{ hashFiles( '**/flake.lock' ) }}
                restore-keys: |
                    ccaches-seg01--${{ github.job }}-
            - name: Rstore previous ccaches
              run: |
                fish _scripts/ccache.fish setup
            - uses: cachix/cachix-action@master
              with:
                name: "nuirrce"
                authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
                cachixArgs: "-c7"
                pushFilter: |
                    (NVIDIA.*\.run)|(-source|vendor\..*|go-modules)|(ccache|stdenv)
            - name: Build
              run: |
                fish _scripts/do-build.fish \
                    parallel false workflow-builds.nix parallel
            - name: "Cleanup"
              if: always()
              run: |
                nix-collect-garbage -d
            - name: "Save ccache"
              if: always()
              run: |
                fish _scripts/ccache.fish finish
    builds-kernels-modules:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
              with:
                ref: master
            - uses: cachix/install-nix-action@v17
              with:
                nix_path: "nixpkgs=channel:nixpkgs-unstable"
            - name: Install required tools
              run: |
                nix-env -f '<nixpkgs>' -iA \
                  'nix-build-uncached' 'fish'
            - name: Configure nix-daemon
              run: |
                fish _scripts/set-tmpdir.fish
            - name: Update flakes before buiding anything
              run: |
                nix flake update
            - uses: actions/cache@v3
              with:
                path: ~/ccache
                key: ccaches-seg01-${{ github.job }}-${{ hashFiles( '**/flake.lock' ) }}
                restore-keys: |
                    ccaches-seg01--${{ github.job }}-
            - name: Rstore previous ccaches
              run: |
                fish _scripts/ccache.fish setup
            - uses: cachix/cachix-action@master
              with:
                name: "nuirrce"
                authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
                cachixArgs: "-c7"
                pushFilter: |
                    (NVIDIA.*\.run)|(-source|vendor\..*|go-modules)|(ccache|stdenv)
            - name: Build
              run: |
                fish _scripts/do-build.fish \
                    parallel false workflow-builds.nix kernels-modules
            - name: "Cleanup"
              if: always()
              run: |
                nix-collect-garbage -d
            - name: "Save ccache"
              if: always()
              run: |
                fish _scripts/ccache.fish finish
